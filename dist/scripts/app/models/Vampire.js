define(["underscore","jquery","parse","../models/SimpleTrait","../models/VampireChange","../models/VampireCreation","../collections/VampireChangeCollection","../collections/ExperienceNotationCollection","../models/ExperienceNotation","../helpers/BNSMETV1_VampireCosts","../helpers/PromiseFailReport","../helpers/ExpirationMixin","../helpers/UserWreqr"],function(e,t,n,i,r,a,s,o,c,u,l,_,d){var g=e.extend({remove_trait:function(e){var t=this;return e.destroy().then(function(){var n={alteration_spent:(e.get("cost")||0)*-1,reason:"Removed "+e.get("name")};return t.remove(e.get("category"),e),t.increment("change_count"),t.add_experience_notation(n)})},ensure_category:function(e){this.has(e)||this.set(e,[])},_update_creation:function(t,i,r){var a=this;return(e.contains(["merits","flaws"],t)||r)&&e.contains(["flaws","merits","focus_mentals","focus_physicals","focus_socials","attributes","skills","disciplines","backgrounds"],t)?n.Object.fetchAllIfNeeded([a.get("creation")]).then(function(s){var o=s[0],c=t+"_"+r+"_remaining",u=t+"_"+r+"_picks";if(o.addUnique(u,i),e.contains(["merits","flaws"],t)){var l=e.sum(o.get(u),"attributes.value");o.set(c,7-l)}else o.increment(c,-1);return n.Promise.as(a)}):n.Promise.as(a)},get_troupe_ids:function(){return this.troupe_ids},get_me_acl:function(){var t=this,i=new n.ACL;i.setPublicReadAccess(!1),i.setPublicWriteAccess(!1);var r=t.get("owner");return e.isUndefined(r)?(i.setReadAccess(n.User.current(),!0),i.setWriteAccess(n.User.current(),!0)):(i.setReadAccess(r,!0),i.setWriteAccess(r,!0)),i.setRoleReadAccess("Administrator",!0),i.setRoleWriteAccess("Administrator",!0),e.each(t.troupe_ids,function(e){i.setRoleReadAccess("LST_"+e,!0),i.setRoleWriteAccess("LST_"+e,!0),i.setRoleReadAccess("AST_"+e,!0),i.setRoleWriteAccess("AST_"+e,!0)}),i},set_cached_acl:function(e){var t=this;e=e||t.get_me_acl(),t.set("acl_to_json",JSON.stringify(e.toJSON()))},get_category_for_fetch:function(t){var n=this,i=n.get(t);return e.filter(i,function(t){return!e.isUndefined(t.id)})},update_trait:function(t,r,a,s,o){var c,u,_=this;return e.isString(t)?u=t:(c=t,a=c.get("category"),o=!0),_.ensure_category(a),n.Object.fetchAllIfNeeded(_.get_category_for_fetch(a)).then(function(){if(e.isString(t)){c=new i,e.each(_.get(a),function(t){e.isEqual(t.get("name"),u)&&(c=t)}),c.setACL(_.get_me_acl());var d=n.Object.extend("Vampire");c.set({name:u,value:s||r,category:a,owner:new d({id:_.id}),free_value:s||0})}else{if(!e.contains(_.get(a),c))return n.Promise.error({code:0,message:"Provided trait not already in Vampire as expected"});if(c.dirty("name")){var g=e.select(e.without(_.get(a),c),"attributes.name",c.get("name"));if(0!=g.length)try{return c.set("name",c._serverData.name),n.Promise.error({code:1,message:"Name matches an existing trait. Restoring original name"})}catch(h){return n.Promise.error({code:2,message:"Name matches an existing trait. Failed to restore original name. "+h})}}}var p=_.calculate_trait_cost(c),f=_.calculate_trait_to_spend(c);e.isFinite(f)||(f=0),c.set("cost",p),_.increment("change_count"),_.addUnique(a,c);var m,v=_._update_creation(a,c,s).then(function(){return 0!=f?_.add_experience_notation({alteration_spent:f,reason:"Update "+c.get("name")+" to "+c.get("value")}):_.save()}).then(function(){return console.log("Finished saving vampire"),n.Promise.as(_)}).fail(function(e){console.log("Failing to save vampire because of "+JSON.stringify(e)),l(e)});return m=o?v:n.Promise.as(_),m.then(function(){return _.trigger("change:"+a),n.Promise.as(c,_)})})},update_text:function(e,t){var i=this;return i.set(e,t),i.save().then(function(){return n.Object.fetchAllIfNeeded([i.get("creation")]).then(function(t){var r=t[0];return r.get(e)?n.Promise.as(i):(r.set(e,!0),r.save().then(function(){return n.Promise.as(i)}))})}).fail(l)},get_trait_by_name:function(t,i){var r=this,a=r.get(t);i=""+i;var s=e.find(a,"attributes.name",i);return n.Promise.as(s,r)},get_trait:function(t,i){var r=this,a=r.get(t);e.isObject(i)&&(i=i.id||i.cid);var s=e.findWhere(a,{cid:i});if(s)return n.Promise.as(s,r);s=e.findWhere(a,{id:i});try{var o=n.Object.fetchAllIfNeeded([s])}catch(c){return c instanceof TypeError?(console.log("Caught a typeerror indicating this object is still saving "+c.message),console.log(JSON.stringify(s)),console.log(JSON.stringify(a)),s.save().then(function(e){return n.Promise.as(e,r)})):n.Promise.reject(c)}return o.then(function(e){return n.Promise.as(e[0],r)})},ensure_creation_rules_exist:function(){var e=this;if(e.has("creation"))return n.Object.fetchAllIfNeeded([e.get("creation")]).then(function(){return n.Promise.as(e)},function(e){console.log("ensure_creation_rules_exist",e)});var t=new a({owner:e,completed:!1,concept:!1,archetype:!1,clan:!1,attributes:!1,focuses:!1,skills_4_remaining:1,skills_3_remaining:2,skills_2_remaining:3,skills_1_remaining:4,backgrounds_3_remaining:1,backgrounds_2_remaining:1,backgrounds_1_remaining:1,disciplines_2_remaining:1,disciplines_1_remaining:2,attributes_7_remaining:1,attributes_5_remaining:1,attributes_3_remaining:1,focus_mentals_1_remaining:1,focus_socials_1_remaining:1,focus_physicals_1_remaining:1,merits_0_remaining:7,flaws_0_remaining:7,phase_1_finished:!1,initial_xp:30,phase_2_finished:!1});return t.save().then(function(t){return e.set("creation",t),e.add_experience_notation({reason:"Character Creation XP",alteration_earned:30,earned:30})}).then(function(t){return n.Promise.as(e)})},fetch_all_creation_elements:function(){var t=this;return t.ensure_creation_rules_exist().then(function(){var i=t.get("creation"),r=["flaws","merits","focus_mentals","focus_physicals","focus_socials","attributes","skills","backgrounds","disciplines"],a=[];return e.each(r,function(t){e.each(e.range(-1,10),function(n){var r=t+"_"+n+"_picks";a=e.union(i.get(r),a)})}),a=e.chain(a).flatten().without(void 0).filter(function(e){return e.id}).value(),n.Object.fetchAllIfNeeded(a).then(function(){return n.Promise.as(t)})})},all_simpletrait_categories:function(){return[["attributes","Attributes","Attributes"],["focus_physicals","Physical Focus","Attributes"],["focus_mentals","Mental Focus","Attributes"],["focus_socials","Social Focus","Attributes"],["health_levels","Health Levels","Expended"],["willpower_sources","Willpower","Expended"],["skills","Skills","Skills"],["lore_specializations","Lore Specializations","Skills"],["academics_specializations","Academics Specializations","Skills"],["drive_specializations","Drive Specializations","Skills"],["linguistics_specializations","Languages","Skills"],["disciplines","Disciplines","Disciplines"],["techniques","Techniques","Disciplines"],["elder_disciplines","Elder Disciplines","Disciplines"],["rituals","Rituals","Disciplines"],["extra_in_clan_disciplines","Extra In Clan Disciplines","Disciplines"],["paths","Path of Enlightenment/Humanity","Morality"],["backgrounds","Backgrounds","Backgrounds"],["haven_specializations","Haven Specializations","Backgrounds"],["contacts_specializations","Contacts Specializations","Backgrounds"],["allies_specializations","Allies Specializations","Backgrounds"],["sabbat_rituals","Sabbat Ritae","Backgrounds"],["vampiric_texts","Vampiric Texts","Backgrounds"],["influence_elite_specializations","Influence: Elite","Backgrounds"],["influence_underworld_specializations","Influence: Underworld","Backgrounds"],["status_traits","Sect Status","Backgrounds"],["merits","Merits","Merits and Flaws"],["flaws","Flaws","Merits and Flaws"]]},unpick_from_creation:function(t,i,r,a){var s=this;return s.fetch_all_creation_elements().then(function(){return s.get_trait(t,i)}).then(function(i){var o=t+"_"+r+"_picks",c=t+"_"+r+"_remaining",u=s.get("creation");if(u.remove(o,i),e.contains(["merits","flaws"],t)){var l=e.sum(u.get(o),"attributes.value");u.set(c,7-l)}else u.increment(c,1);var _=n.Promise.when(u.save(),s.remove_trait(i));return a?_.then(function(){return n.Promise.as(s)}):n.Promise.as(s)})},is_being_created:function(){return!this.get("creation").get("completed")},complete_character_creation:function(){var e=this;return e.fetch_all_creation_elements().then(function(){var t=e.get("creation");return t.set("completed",!0),t.save()})},_raw_generation:function(){var t,n=this;return e.each(n.get("backgrounds"),function(e){"Generation"==e.get("name")&&(t=e.get("value"))}),t},generation:function(){return this._raw_generation()||1},has_generation:function(){return!e.isUndefined(this._raw_generation())},morality_merit:function(){var t=this,n="Humanity";return e.each(t.get("merits"),function(t){if(e.startsWith(t.get("name"),"Path of")){var i=e.words(t.get("name"));n=e.slice(i,2),n=n.join(" ")}}),n},morality:function(){var e=this;if(!e.has("paths"))return new i;var t=e.get("paths")[0];return t?t:new i({name:"Humanity",value:1})},health_levels:function(){var t=this,n=["Healthy","Injured","Incapacitated"],i={},r=[];return e.each(t.get("health_levels"),function(e){i[e.get("name")]=e.get("value")}),e.each(n,function(e){r.push([e,i[e]])}),r},experience_available:function(){var e=this;return e.get("experience_earned")-e.get("experience_spent")},get_experience_notations:function(t,i){var r=this;return e.isUndefined(r.experience_notations)?(r.experience_notations=new o,r.experience_notations.on("change",r.on_update_experience_notation,r),r.experience_notations.on("remove",r.on_remove_experience_notation,r),t&&t(r.experience_notations),r.fetch_experience_notations()):(t&&t(r.experience_notations),i&&i(r.experience_notations),n.Promise.as(r.experience_notations))},fetch_experience_notations:function(){var e=this;return e._experienceNotationsFetch=e._experienceNotationsFetch||n.Promise.as(),e._experienceNotationsFetch=e._experienceNotationsFetch.always(function(){var t=new n.Query(c);return t.equalTo("owner",e).addDescending("entered").addDescending("createdAt"),e.experience_notations.query=t,e.experience_notations.fetch({reset:!0})}),e._experienceNotationsFetch},wait_on_current_experience_update:function(){var e=this;return e._propagateExperienceUpdate||n.Promise.as()},_finalize_triggered_experience_notation_changes:function(t,i){var r=this,a=r._propagate_experience_notation_change(r.experience_notations,t);return r._propagateExperienceUpdate=r._propagateExperienceUpdate||n.Promise.as(),r._propagateExperienceUpdate=r._propagateExperienceUpdate.done(function(){return n.Object.saveAll(a)}).done(function(){r.trigger("finish_experience_notation_propagation")}).fail(function(t){e.isArray(t)?e.each(t,function(e){console.log("Something failed"+e.message)}):console.log("error updating experience"+t.message)}),r._propagateExperienceUpdate},on_remove_experience_notation:function(e,t,n){var i=this;return i._finalize_triggered_experience_notation_changes(n.index,t)},on_update_experience_notation:function(e,t,i){var r,a=this,s=!1;n.Promise.as([]);i=i||{};var o=t.changes;return o.entered&&(s=!0,a.experience_notations.sort()),(o.alteration_earned||o.alteration_spent)&&(s=!0),s?(r=a.experience_notations.indexOf(e),a._finalize_triggered_experience_notation_changes(r,a.experience_notations)):n.Promise.as([])},_default_experience_notation:function(t){var n=this,i=e.defaults(t||{},{entered:new Date,reason:"Unspecified reason",earned:0,spent:0,alteration_earned:0,alteration_spent:0,owner:n}),r=new c(i);return r.setACL(n.get_me_acl()),r},_propagate_experience_notation_change:function(t,n){var i=this;i.trigger("begin_experience_notation_propagation");var r;r=n+1<t.models.length?t.at(n+1):i._default_experience_notation();var a=[],s=e.reduceRight(e.slice(t.models,0,n+1),function(e,t,n,i){var r=t.get("alteration_earned")+e.get("earned");t.set("earned",r,{silent:!0});var s=t.get("alteration_spent")+e.get("spent");return t.set("spent",s,{silent:!0}),a.push(t),t},r);return i.set("experience_earned",s.get("earned")),i.set("experience_spent",s.get("spent")),a.push(i),a},add_experience_notation:function(e){var t=this;return t.get_experience_notations().then(function(i){var r=t._default_experience_notation(e);i.add(r,{silent:!0});for(var a,s,o=0,c=i.models.length;o<c;o++)if(s=i.models[o],i._byCid[s.cid]){a=o;break}var u=t._propagate_experience_notation_change(i,a);return n.Object.saveAll(u).then(function(){s.trigger("add",s,i,{index:a}),t.trigger("finish_experience_notation_propagation")})})},remove_experience_notation:function(t,i){var i,t,r=this;i=i||{},t=e.isArray(t)?t.slice():[t];var a=t[0],s=a;return r.get_experience_notations().then(function(e){var t=e.indexOf(a);e.remove(a,{silent:!0});var i=r._propagate_experience_notation_change(e,t);return n.Promise.when(a.destroy(),n.Object.saveAll(i)).then(function(){s.trigger("remove",s,e,{index:t}),r.trigger("finish_experience_notation_propagation")})})},get_recorded_changes:function(t){var n=this;if(!e.isUndefined(n.recorded_changes)){var i=n.update_recorded_changes();return t&&i.then(function(e){t(e)}),i}return n.recorded_changes=new s,n.on("saved",n.update_recorded_changes,n),t&&t(n.recorded_changes),n.fetch_recorded_changes()},update_recorded_changes:function(){var t=this;return 0==t.recorded_changes.models.length?t.fetch_recorded_changes():(t._recordedChangesFetch=t._recordedChangesFetch||n.Promise.as(),t._recordedChangesFetch=t._recordedChangesFetch.always(function(){var i=e.last(t.recorded_changes.models).createdAt,a=new n.Query(r);return a.equalTo("owner",t).addAscending("createdAt").limit(1e3),a.greaterThan("createdAt",i),t.recorded_changes.query=a,t.recorded_changes.fetch({add:!0})}),t._recordedChangesFetch)},fetch_recorded_changes:function(){var e=this;return e._recordedChangesFetch=e._recordedChangesFetch||n.Promise.as(),e._recordedChangesFetch=e._recordedChangesFetch.always(function(){console.log("Resetting recorded changes");var t=new n.Query(r);return t.equalTo("owner",e).addAscending("createdAt").limit(1e3),e.recorded_changes.query=t,e.recorded_changes.fetch({reset:!0})}),e._recordedChangesFetch},calculate_trait_cost:function(e){var t=this;return t.VampireCosts.calculate_trait_cost(t,e)},calculate_trait_to_spend:function(e){var t=this,n=t.VampireCosts.calculate_trait_cost(t,e),i=e.get("cost")||0;return n-i},calculate_total_cost:function(){var t=this,i=["skills","backgrounds","disciplines","attributes","merits","rituals","techniques","elder_disciplines"],r={},a=e.chain(i).map(function(e){return t.get(e)}).flatten().without(void 0).value();return n.Object.fetchAllIfNeeded(a).then(function(i){return e.each(i,function(e){r[e.get("category")+"-"+e.get("name")]={trait:e,cost:t.calculate_trait_cost(e)}}),n.Promise.as(r)})},get_transformed:function(t){var n=!e.isUndefined(this.troupes),r=this.clone();n&&(this.troupes.parent=null);var a=[];return e.each(t,function(t){if("core"!=t.get("category")){var n=t.get("category"),s=e.find(r.get(n),function(n){return e.isUndefined(n)&&console.log("Something went wrong fetching the full character object and now a name is undefined"),e.isEqual(n.get("name"),t.get("name"))}),o=new i({name:t.get("old_text")||t.get("name"),free_value:t.get("free_value"),value:t.get("old_value")||t.get("value"),cost:t.get("old_cost")||t.get("cost"),category:t.get("category")});"update"==t.get("type")?(r.set(n,e.xor(r.get(n),[s,o])),a.push({category:n,name:t.get("name"),fake:o,type:"changed"})):"define"==t.get("type")?(r.set(n,e.without(r.get(n),s)),a.push({category:n,name:o.get("name"),fake:void 0,type:"define"})):"remove"==t.get("type")&&(r.set(n,e.union(r.get(n),[o])),a.push({category:n,name:o.get("name"),fake:o,type:"removed"}))}else"core_define"==t.get("type")?(r.set(t.get("name"),void 0),a.push({category:t.get("category"),name:t.get("name"),old_text:void 0,type:"define"})):"core_update"==t.get("type")&&(r.set(t.get("name"),t.get("old_text")),a.push({category:t.get("category"),name:t.get("name"),old_text:t.get("old_text"),type:"update"}))}),r.transform_description=a,r},max_trait_value:function(e){return"skills"==e.get("category")?10:20},get_sorted_skills:function(){var t=this,n=t.get("skills");return n=e.sortBy(n,"attributes.name")},get_grouped_skills:function(t,n){var i=this,t=t||i.get_sorted_skills(),n=n||3,r={0:[],1:[],2:[]},a=e.ceil(t.length/n);return e.each(e.range(n),function(n){r[n]=e.take(t,a),t=e.drop(t,a)}),r=e.zip(r[0],r[1],r[2])},initialize_vampire_costs:function(){var t=this;return e.isUndefined(t.VampireCosts)?(t.VampireCosts=new u,t.VampireCosts.initialize().then(function(){return n.Promise.as(t)})):n.Promise.as(t)},get_in_clan_disciplines:function(){var e=this;return e.VampireCosts.get_in_clan_disciplines(e)},get_thumbnail:function(e){var t=this;if(t.get("portrait")){var i=t.get("portrait");return i.fetch().then(function(i){return console.log(t.get_thumbnail_sync(e)),n.Promise.as(i.get("thumb_"+e).url())})}return n.Promise.as("head_skull.png")},get_thumbnail_sync:function(t){var n=this;return e.result(n,"attributes.portrait.attributes.thumb_"+t+".url","head_skull.png")},get_willpower_total:function(){var t=this,n=t.get("willpower_sources"),i=e.sum(n,"attributes.value");return i},archive:function(){var e=this;return e.unset("owner"),e.save()},initialize_troupe_membership:function(){var t=this;t.troupe_ids=[],e.isUndefined(t.troupes)?(t.troupes=t.relation("troupes"),t.troupes.targetClassName="Troupe"):e.isNull(t.troupes.parent)&&(t.troupes.parent=t);var i=t.troupes.query();return i.each(function(e){t.troupe_ids.push(e.id)}).then(function(){return n.Promise.as(t)})},broken_update_troupe_acls:function(){var e=this,i=[],r=e.get_me_acl();return t.mobile.loading("show",{text:"Updating character permissions",textVisible:!0}),e.set_cached_acl(r),e.setACL(r),e.save().then(function(){t.mobile.loading("show",{text:"Updating trait permissions",textVisible:!0});var r=new n.Query("SimpleTrait");return r.equalTo("owner",e),r.each(function(t){t.setACL(e.get_me_acl()),i.push(t)})}).then(function(){return t.mobile.loading("show",{text:"Saving trait permissions",textVisible:!0}),n.Object.saveAll(i)}).then(function(){return t.mobile.loading("show",{text:"Fetching experience notations",textVisible:!0}),n.Promise.error()}).then(function(i){return t.mobile.loading("show",{text:"Updating experience notations",textVisible:!0}),i.each(function(t){t.setACL(e.get_me_acl())}),n.Object.saveAll(i.models)}).then(function(){return t.mobile.loading("show",{text:"Updating server side change log",textVisible:!0}),n.Cloud.run("update_vampire_change_permissions_for",{character:e.id})})},progress:function(n){e.isUndefined(t)||e.isUndefined(t.mobile)||e.isUndefined(t.mobile.loading)?console.log("Progress: "+n):t.mobile.loading("show",{text:n,textVisible:!0})},update_troupe_acls:function(){var e=this,t=[],i=e.get_me_acl();return e.progress("Updating character permissions"),e.set_cached_acl(i),e.setACL(i),e.save().then(function(){e.progress("Updating trait permissions"),delete e.attributes.troupes,delete e.troupes,delete e._previousAttributes.troupes,delete e._serverData.troupes;var i=new n.Query("SimpleTrait");return i.equalTo("owner",e),i.each(function(n){n.setACL(e.get_me_acl()),t.push(n)})}).then(function(){return e.progress("Saving trait permissions"),n.Object.saveAll(t)}).then(function(){return e.progress("Fetching experience notations"),e.get_experience_notations()}).then(function(t){return e.progress("Updating experience notations"),t.each(function(t){t.setACL(e.get_me_acl())}),n.Object.saveAll(t.models)}).then(function(){return e.progress("Updating server side change log"),n.Cloud.run("update_vampire_change_permissions_for",{character:e.id})}).then(function(){return e.progress("Finishing up!"),n.Promise.as(e)})},join_troupe:function(e){var t=this;return t.initialize_troupe_membership().then(function(){return t.troupes.add(e),t.troupe_ids.push(e.id),t.update_troupe_acls()})},leave_troupe:function(t){var n=this;return n.initialize_troupe_membership().then(function(){return n.troupes.remove(t),n.troupe_ids=e.remove(n.troupe_ids,t.id),n.update_troupe_acls()})},get_owned_ids:function(){var t=this,i={SimpleTrait:[],ExperienceNotation:[],VampireChange:[]},r=t;return n.Promise.when(e.map(["SimpleTrait","ExperienceNotation","VampireChange"],function(e){var t=new n.Query(e).equalTo("owner",r).select("id");return t.each(function(t){i[e].push(t.id)})})).then(function(){return n.Promise.as(i)})},update_server_client_permissions_mismatch:function(){var t=this;return t._mismatchFetch=t._mismatchFetch||n.Promise.as(),t._mismatchFetch=t._mismatchFetch.always(function(){return n.Promise.when(t.get_owned_ids(),n.Cloud.run("get_expected_vampire_ids",{character:t.id})).then(function(i,r){return e.eq(i,r)?t.is_mismatched=!1:t.is_mismatched=!0,n.Promise.as(t)})}),t._mismatchFetch},check_server_client_permissions_mismatch:function(){return e.isUndefined(this.is_mismatched)?this.update_server_client_permissions_mismatch():n.Promise.as(this)}},_),h=n.Object.extend("Vampire",g);h.get_character=function(t,i,r){if(e.isUndefined(r)&&(r={_character:null}),i=i||[],e.isString(i)&&(i=[i]),null===r._character){var a=new n.Query(h);return a.include("portrait"),a.include("owner"),a.include("backgrounds"),a.include("extra_in_clan_disciplines"),a.get(t).then(function(e){return r._character=e,h.get_character(t,i,r)})}if(r._character.id!=t)return r._character.save().then(function(){return r._character=null,h.get_character(t,i,r)});if("all"==i&&(i=e.result(r._character,"all_simpletrait_categories",[]),i=e.map(i,function(e){return e[0]})),0!==i.length){var s=e.chain(i).map(function(e){return r._character.get(e)}).flatten().without(void 0).filter(function(e){return e.id}).value();return n.Object.fetchAllIfNeeded(s).done(function(){return h.get_character(t,[],r)})}return r._character.ensure_creation_rules_exist().then(function(e){return r._character.initialize_vampire_costs()}).then(function(e){return r._character.initialize_troupe_membership()})};var p=function(n){e.isUndefined(t)||e.isUndefined(t.mobile)||e.isUndefined(t.mobile.loading)?console.log("Progress: "+n):t.mobile.loading("show",{text:n,textVisible:!0})};return h.create=function(t){var i,r=new h,a=new n.ACL;return a.setPublicReadAccess(!1),a.setPublicWriteAccess(!1),a.setWriteAccess(n.User.current(),!0),a.setReadAccess(n.User.current(),!0),a.setRoleReadAccess("Administrator",!0),a.setRoleWriteAccess("Administrator",!0),r.setACL(a),p("Fetching patronage status"),d.get_latest_patronage(n.User.current()).then(function(i){var a={name:t,owner:n.User.current(),change_count:0};return i&&e.extend(a,{expiresOn:i.get("expiresOn")}),p("Saving base character"),r.save(a)}).then(function(){return p("Fetching character from server"),h.get_character(r.id)}).then(function(e){return i=e,p("Adding Humanity"),i.update_trait("Humanity",5,"paths",5,!0)}).then(function(){return p("Adding Healthy"),i.update_trait("Healthy",3,"health_levels",3,!0)}).then(function(){return p("Adding Injured"),i.update_trait("Injured",3,"health_levels",3,!0)}).then(function(){return p("Adding Incapacitated"),i.update_trait("Incapacitated",3,"health_levels",3,!0)}).then(function(){return p("Adding Willpower"),i.update_trait("Willpower",6,"willpower_sources",6,!0)}).then(function(){return p("Done!"),n.Promise.as(i)})},h.create_test_character=function(e){var e=e||"",t="karmacharactertest"+e+Math.random().toString(36).slice(2);return h.create(t)},h.all_simpletrait_categories=function(){return[["attributes","Attributes","Attributes"],["focus_physicals","Physical Focus","Attributes"],["focus_mentals","Mental Focus","Attributes"],["focus_socials","Social Focus","Attributes"],["health_levels","Health Levels","Expended"],["willpower_sources","Willpower","Expended"],["skills","Skills","Skills"],["lore_specializations","Lore Specializations","Skills"],["academics_specializations","Academics Specializations","Skills"],["drive_specializations","Drive Specializations","Skills"],["linguistics_specializations","Languages","Skills"],["disciplines","Disciplines","Disciplines"],["techniques","Techniques","Disciplines"],["elder_disciplines","Elder Disciplines","Disciplines"],["rituals","Rituals","Disciplines"],["extra_in_clan_disciplines","Extra In Clan Disciplines","Disciplines"],["paths","Path of Enlightenment/Humanity","Morality"],["backgrounds","Backgrounds","Backgrounds"],["haven_specializations","Haven Specializations","Backgrounds"],["contacts_specializations","Contacts Specializations","Backgrounds"],["allies_specializations","Allies Specializations","Backgrounds"],["sabbat_rituals","Sabbat Ritae","Backgrounds"],["vampiric_texts","Vampiric Texts","Backgrounds"],["influence_elite_specializations","Influence: Elite","Backgrounds"],["influence_underworld_specializations","Influence: Underworld","Backgrounds"],["status_traits","Sect Status","Backgrounds"],["merits","Merits","Merits and Flaws"],["flaws","Flaws","Merits and Flaws"]]},h});